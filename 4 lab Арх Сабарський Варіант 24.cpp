#include <iostream>
#include <filesystem>

int main() {
    std::string oldDir;
    std::string newDir;

    std::cout << "Введіть шлях до файлу, який потрібно перемістити: ";
    std::cin >> oldDir;

    std::cout << "Введіть шлях до нового каталогу: ";
    std::cin >> newDir;

    try {
        std::filesystem::rename(oldDir, newDir);
        std::cout << "Файл успішно переміщено!" << std::endl;
    }
    catch (const std::filesystem::error& e) {
        std::cerr << "Помилка під час переміщення файлу: " << e.what() << std::endl;
    }

    return 0;
}



//Пояснення коду :

//#include <iostream>: Цей рядок включає заголовний файл iostream, який використовується для вводу та виводу даних з консолі.
//#include <filesystem>: Цей рядок включає заголовний файл filesystem, який використовується для роботи з файловою системою.
//std::string oldDir; : Цей рядок декларує змінну oldDir типу std::string, яка буде використовуватися для зберігання шляху до старого каталогу.
//std::string newDir; : Цей рядок декларує змінну newDir типу std::string, яка буде використовуватися для зберігання шляху до нового каталогу.
//std::cout << "Введіть шлях до файлу, який потрібно перемістити: "; : Цей рядок виводить запит на введення шляху до файлу, який потрібно перемістити.
//std::cin >> oldDir; : Цей рядок читає шлях до файлу з консолі та зберігає його в змінній oldDir.
//std::cout << "Введіть шлях до нового каталогу: "; : Цей рядок виводить запит на введення шляху до нового каталогу.
//std::cin >> newDir; : Цей рядок читає шлях до нового каталогу з консолі та зберігає його в змінній newDir.
//try {
    : //Цей блок використовується для обробки винятків.
        //std::filesystem::rename(oldDir, newDir); : Цей рядок використовує функцію std::filesystem::rename() для переміщення файлу з oldDir в newDir.
        //std::cout << "Файл успішно переміщено!" << std::endl; : Цей рядок виводить повідомлення про успішне переміщення файлу.
//}
//catch (const std::filesystem::error& e) {
    //: Цей блок використовується для обробки винятків, які можуть виникнути під час переміщення файлу.
        //std::cerr << "Помилка під час переміщення файлу: " << e.what() << std::endl; : Цей рядок виводить повідомлення про помилку, яка виникла під час переміщення файлу.
        //return 0; : Цей рядок повертає код 0, який свідчить про успішне завершення програми.